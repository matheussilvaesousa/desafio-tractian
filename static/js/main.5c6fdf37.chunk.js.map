{"version":3,"sources":["SwitchComponents.js","api.js","components/Unit.js","components/Overview.js","App.js","reportWebVitals.js","index.js"],"names":["SwitchComponents","active","children","filter","child","props","name","api","axios","get","Text","Typography","TabPane","Tabs","Unit","unitData","data","index","useState","visible","setVisible","selectedAsset","setSelectedAsset","currentAsset","assetsData","countAssets","inUse","available","onAlert","underMaintenance","insightsPending","insightsChecked","handleCloseModal","defaultActiveKey","tab","map","asset","title","strong","className","onClick","handleOpenModal","description","type","Intl","DateTimeFormat","year","month","day","format","Date","parse","startup","onOk","onCancel","width","gutter","justify","span","src","model","image","class","value","healthscore","health","suffix","insights","pending","checked","category","id","highcharts","Highcharts","options","chart","text","series","colorByPoint","y","Overview","dataSum","forEach","unit","property","Header","Layout","Sider","Content","Footer","SubMenu","Menu","Title","App","setData","activeContent","setActiveContent","unitIndex","setUnitIndex","handleContent","content","a","useEffect","apiCall","console","log","units","fetchData","style","color","marginTop","level","mode","defaultSelectedKeys","HomeOutlined","ItemGroup","Item","AreaChartOutlined","padding","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c6fdf37.chunk.js","sourcesContent":["export default function SwitchComponents({ active, children }) {\n  return children.filter((child) => child.props.name === active);\n}\n","import axios from \"axios\";\n\nexport default function api() {\n  return axios.get(\"https://motor.tractian.com/api/test\");\n}\n","import React, { useState } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport {\n  Tabs,\n  Card,\n  Row,\n  Col,\n  Modal,\n  Typography,\n  Divider,\n  Statistic,\n  Image,\n} from \"antd\";\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\nfunction Unit(props) {\n  const unitData = props.data[props.index];\n  const [visible, setVisible] = useState(false);\n  const [selectedAsset, setSelectedAsset] = useState(0);\n  let currentAsset = unitData.data.assetsData[selectedAsset];\n\n  const {\n    countAssets,\n    inUse,\n    available,\n    onAlert,\n    underMaintenance,\n    insightsPending,\n    insightsChecked,\n  } = unitData.data;\n\n  function handleOpenModal(index) {\n    setSelectedAsset(index);\n    setVisible(true);\n  }\n  function handleCloseModal() {\n    setVisible(false);\n  }\n\n  return (\n    <Row>\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Ativos\" key=\"assets\">\n          <Row>\n            {unitData.data.assetsData.map((asset, index) => {\n              return (\n                <>\n                  <Card\n                    title={<Text strong>{asset.name}</Text>}\n                    className=\"card\"\n                    onClick={() => handleOpenModal(index)}\n                  >\n                    <Text>{asset.description}</Text>\n                    <div className=\"date-wrapper\">\n                      <Divider />\n                      <Text type=\"secondary\">\n                        Iniciado em\n                        {\" \" +\n                          new Intl.DateTimeFormat(\"pt-BR\", {\n                            year: \"numeric\",\n                            month: \"long\",\n                            day: \"2-digit\",\n                          }).format(Date.parse(asset.startup))}\n                      </Text>\n                    </div>\n                  </Card>\n                  <Modal\n                    title={<Text strong>{currentAsset.name}</Text>}\n                    visible={visible}\n                    onOk={() => handleCloseModal()}\n                    onCancel={() => handleCloseModal()}\n                    index={index}\n                    width={800}\n                  >\n                    <Row gutter={24} justify=\"center\">\n                      <Col className=\"modal-image-wrapper\" span={12}>\n                        <Image width={200} src={currentAsset.model.image} />\n                        <p class=\"image-description\">\n                          {currentAsset.model.description}\n                        </p>\n                      </Col>\n                      <Col span={12}>\n                        <Col span={12}>\n                          <Statistic\n                            title=\"Saúde do equipamento\"\n                            value={currentAsset.healthscore.health}\n                            suffix=\"/ 100\"\n                          />\n                        </Col>\n                        <Col span={12}>\n                          <Statistic\n                            title=\"Insights pendentes\"\n                            value={currentAsset.insights.pending}\n                          />\n                        </Col>\n                        <Col span={12}>\n                          <Statistic\n                            title=\"Insights resolvidos\"\n                            value={currentAsset.insights.checked}\n                          />\n                        </Col>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"description-wrapper\">\n                        <Text className=\"description-title\">\n                          {currentAsset.category.name}\n                        </Text>\n                        <Text className=\"description-text\">\n                          {currentAsset.category.description}\n                        </Text>\n                      </Col>\n                    </Row>\n                  </Modal>\n                </>\n              );\n            })}\n          </Row>\n        </TabPane>\n        <TabPane tab=\"Estatísticas\" key=\"stats  \">\n          <Row id=\"overview\" gutter={48} justify=\"space-around\">\n            <Col span={3}>\n              <Statistic title=\"Total de ativos\" value={countAssets} />\n            </Col>\n            <Col span={3}>\n              <Statistic title=\"Em uso\" value={inUse} />\n            </Col>\n            <Col span={3}>\n              <Statistic title=\"Disponíveis\" value={available} />\n            </Col>\n            <Col span={3}>\n              <Statistic title=\"Em alerta\" value={onAlert} />\n            </Col>\n            <Col span={3}>\n              <Statistic title=\"Em manutenção\" value={underMaintenance} />\n            </Col>\n            <Col span={3}>\n              <Statistic title=\"Insights pendentes\" value={insightsPending} />\n            </Col>\n            <Col span={3}>\n              <Statistic title=\"Insights resolvidos\" value={insightsChecked} />\n            </Col>\n            <Divider />\n            <Col span={12}>\n              <HighchartsReact\n                highcharts={Highcharts}\n                options={{\n                  chart: {\n                    type: \"pie\",\n                  },\n                  title: {\n                    text: \"Ativos\",\n                  },\n                  series: [\n                    {\n                      name: \"Browsers\",\n                      colorByPoint: true,\n                      data: [\n                        {\n                          name: \"Em uso\",\n                          y: inUse,\n                        },\n                        {\n                          name: \"Disponíveis\",\n                          y: available,\n                        },\n                        {\n                          name: \"Em alerta\",\n                          y: onAlert,\n                        },\n                        {\n                          name: \"Em manutenção\",\n                          y: underMaintenance,\n                        },\n                      ],\n                    },\n                  ],\n                }}\n              />\n            </Col>\n            <Col>\n              <HighchartsReact\n                highcharts={Highcharts}\n                options={{\n                  chart: {\n                    type: \"pie\",\n                  },\n                  title: {\n                    text: \"Insights\",\n                  },\n                  series: [\n                    {\n                      name: \"Browsers\",\n                      colorByPoint: true,\n                      data: [\n                        {\n                          name: \"Insights pendentes\",\n                          y: insightsPending,\n                        },\n                        {\n                          name: \"Insights resolvidos\",\n                          y: insightsChecked,\n                        },\n                      ],\n                    },\n                  ],\n                }}\n              />\n            </Col>\n          </Row>\n        </TabPane>\n      </Tabs>\n    </Row>\n  );\n}\n\nexport default Unit;\n","import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { Statistic, Row, Col, Divider } from \"antd\";\n\nfunction Overview(props) {\n  const data = props.data;\n  const dataSum = {\n    countAssets: 0,\n    inUse: 0,\n    available: 0,\n    onAlert: 0,\n    underMaintenance: 0,\n    insightsPending: 0,\n    insightsChecked: 0,\n  };\n\n  data.forEach((unit) => {\n    for (const property in unit.data) {\n      dataSum[property] += unit.data[property];\n    }\n  });\n\n  return (\n    <Row id=\"overview\" gutter={48} justify=\"space-around\">\n      <Col span={3}>\n        <Statistic title=\"Total de ativos\" value={dataSum.countAssets} />\n      </Col>\n      <Col span={3}>\n        <Statistic title=\"Em uso\" value={dataSum.inUse} />\n      </Col>\n      <Col span={3}>\n        <Statistic title=\"Disponíveis\" value={dataSum.available} />\n      </Col>\n      <Col span={3}>\n        <Statistic title=\"Em alerta\" value={dataSum.onAlert} />\n      </Col>\n      <Col span={3}>\n        <Statistic title=\"Em manutenção\" value={dataSum.underMaintenance} />\n      </Col>\n      <Col span={3}>\n        <Statistic title=\"Insights pendentes\" value={dataSum.insightsPending} />\n      </Col>\n      <Col span={3}>\n        <Statistic\n          title=\"Insights resolvidos\"\n          value={dataSum.insightsChecked}\n        />\n      </Col>\n      <Divider />\n      <Col span={12}>\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={{\n            chart: {\n              type: \"pie\",\n            },\n            title: {\n              text: \"Ativos\",\n            },\n            series: [\n              {\n                name: \"Browsers\",\n                colorByPoint: true,\n                data: [\n                  {\n                    name: \"Em uso\",\n                    y: dataSum.inUse,\n                  },\n                  {\n                    name: \"Disponíveis\",\n                    y: dataSum.available,\n                  },\n                  {\n                    name: \"Em alerta\",\n                    y: dataSum.onAlert,\n                  },\n                  {\n                    name: \"Em manutenção\",\n                    y: dataSum.underMaintenance,\n                  },\n                ],\n              },\n            ],\n          }}\n        />\n      </Col>\n      <Col>\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={{\n            chart: {\n              type: \"pie\",\n            },\n            title: {\n              text: \"Insights\",\n            },\n            series: [\n              {\n                name: \"Browsers\",\n                colorByPoint: true,\n                data: [\n                  {\n                    name: \"Insights pendentes\",\n                    y: dataSum.insightsPending,\n                  },\n                  {\n                    name: \"Insights resolvidos\",\n                    y: dataSum.insightsChecked,\n                  },\n                ],\n              },\n            ],\n          }}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nexport default Overview;\n","import React, { useEffect, useState } from \"react\";\nimport { Layout, Menu, Breadcrumb, Typography } from \"antd\";\nimport { HomeOutlined, AreaChartOutlined } from \"@ant-design/icons\";\nimport SwitchComponents from \"./SwitchComponents\";\nimport \"./styles/global.css\";\n\nimport api from \"./api\";\nimport Unit from \"./components/Unit\";\nimport Overview from \"./components/Overview\";\n\nconst { Header, Sider, Content, Footer } = Layout;\nconst { SubMenu } = Menu;\nconst { Title } = Typography;\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [activeContent, setActiveContent] = useState(\"overview\");\n  const [unitIndex, setUnitIndex] = useState(0);\n\n  useEffect(() => {\n    async function fetchData() {\n      const apiCall = await api();\n      console.log(apiCall);\n      return setData(apiCall.data.units);\n    }\n    fetchData();\n  }, []);\n\n  async function handleContent(content, index) {\n    setActiveContent(content);\n    setUnitIndex(index);\n  }\n\n  return (\n    <Layout id=\"main\">\n      <Header>\n        <Title style={{ color: \"white\", marginTop: 10 }} level={2}>\n          Placeholder\n        </Title>\n      </Header>\n      <Layout>\n        <Sider id=\"sider\">\n          <Menu mode=\"inline\" defaultSelectedKeys={[\"overview\"]}>\n            <SubMenu\n              title={\n                <span>\n                  <HomeOutlined />\n                  <span>Unidades</span>\n                </span>\n              }\n            >\n              <Menu.ItemGroup key=\"units\">\n                {data.map((unit, index) => {\n                  return (\n                    <Menu.Item\n                      key={index}\n                      onClick={() => handleContent(\"unit\", index)}\n                    >\n                      {unit.name}\n                    </Menu.Item>\n                  );\n                })}\n              </Menu.ItemGroup>\n            </SubMenu>\n            <Menu.Item key=\"overview\" onClick={() => handleContent(\"overview\")}>\n              <AreaChartOutlined />\n              <span>Visão Geral</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Content style={{ padding: \"0 50px\" }}>\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\n              <Breadcrumb.Item>Placeholder</Breadcrumb.Item>\n              <Breadcrumb.Item>\n                {activeContent === \"unit\"\n                  ? `${data[unitIndex].name}`\n                  : activeContent === \"overview\" && \"Visão geral\"}\n              </Breadcrumb.Item>\n            </Breadcrumb>\n            <div id=\"site-layout-content\">\n              <SwitchComponents active={activeContent}>\n                <Unit name=\"unit\" title=\"unit\" data={data} index={unitIndex} />\n                <Overview name=\"overview\" data={data} />\n              </SwitchComponents>\n            </div>\n          </Content>\n          <Footer id=\"footer\">Desafio Tractian 2020 ®</Footer>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}